// Generated by LiveScript 1.3.1
var joi, validate, mobile;
joi = require('joi');
validate = {
  isvalid: function(){
    var valid;
    valid = false;
    joi.validate(this.ctx, this.schema, function(err, val){
      if (!err) {
        return valid = true;
      }
    });
    return valid;
  }
};
mobile = (function(){
  mobile.displayName = 'mobile';
  var prototype = mobile.prototype, constructor = mobile;
  importAll$(prototype, arguments[0]);
  function mobile(ctx){
    var this$ = this instanceof ctor$ ? this : new ctor$;
    this$.ctx = ctx;
    this$.schema = require('../schema/mobile');
    return this$;
  } function ctor$(){} ctor$.prototype = prototype;
  return mobile;
}(validate));
module.exports = mobile;
function importAll$(obj, src){
  for (var key in src) obj[key] = src[key];
  return obj;
}